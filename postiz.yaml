networks:
  ingress:
    name: ingress
    external: true

services:
  postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    restart: always
    labels:
      - traefik.http.routers.postiz.middlewares=authentik-proxy@docker
      - "traefik.http.routers.postiz-backend.rule=Host(`postiz.${DOMAIN}`)"  # Replace with your domain
      - "traefik.http.services.postiz-backend.loadbalancer.server.port=5000"  # Internal port for backend
      - "traefik.http.routers.postiz-backend.entrypoints=websecure"  # Define entrypoint (default http)
      - "traefik.http.routers.postiz-backend.tls=true"  # Disable TLS for HTTP (you can enable it if needed)
    environment:
      # You must change these. Replace `postiz.your-server.com` with your DNS name - what your web browser sees.
      MAIN_URL: "https://postiz.${DOMAIN}"
      FRONTEND_URL: "https://postiz.${DOMAIN}"
      NEXT_PUBLIC_BACKEND_URL: "https://postiz.${DOMAIN}/api"
      JWT_SECRET: ${POSTIZ_JWT_SECRET}
 
      # These defaults are probably fine, but if you change your user/password, update it in the
      # postiz-postgres or postiz-redis services below.
      DATABASE_URL: "postgresql://postiz-user:postiz-password@postiz-postgres:5432/postiz-db-local"
      REDIS_URL: "redis://postiz-redis:6379"
      BACKEND_INTERNAL_URL: "http://localhost:3000"
      IS_GENERAL: "true" # Required for self-hosting.
      # The container images are pre-configured to use /uploads for file storage.
      # You probably should not change this unless you have a really good reason!
      STORAGE_PROVIDER: "local"
      UPLOAD_DIRECTORY: "/uploads"
      NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
      # SNS
      FACEBOOK_APP_ID: ${POSTIZ_FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${POSTIZ_FACEBOOK_APP_SECRET}
      TIKTOK_CLIENT_ID: ${POSTIZ_TIKTOK_CLIENT_ID}
      TIKTOK_CLIENT_SECRET: ${POSTIZ_TIKTOK_CLIENT_SECRET}
      YOUTUBE_CLIENT_ID: ${POSTIZ_YOUTUBE_CLIENT_ID}
      YOUTUBE_CLIENT_SECRET: ${POSTIZ_YOUTUBE_CLIENT_SECRET}
    volumes:
      - postiz-config:/config/
      - postiz-uploads:/uploads/
    networks:
      - ingress
    depends_on:
      postiz-postgres:
        condition: service_healthy
      postiz-redis:
        condition: service_healthy
 
  postiz-postgres:
    image: postgres:14.5
    container_name: postiz-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postiz-password
      POSTGRES_USER: postiz-user
      POSTGRES_DB: postiz-db-local
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - ingress
    healthcheck:
      test: pg_isready -U postiz-user -d postiz-db-local
      interval: 10s
      timeout: 3s
      retries: 3
  postiz-redis:
    image: redis:7.2
    container_name: postiz-redis
    restart: always

    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postiz-redis-data:/data
    networks:
      - ingress
 
 
volumes:
  postgres-volume:
    external: false
 
  postiz-redis-data:
    external: false
 
  postiz-config:
    external: false
 
  postiz-uploads:
    external: false
