# https://docs.n8n.io/hosting/installation/server-setups/docker-compose
---
networks:
  ingress:
    name: ingress
    external: true

volumes:
  n8n_data: {}
  n8n-mq_data: {}
services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:1.62.6
    container_name: n8n
    labels:
      - traefik.http.routers.n8n.middlewares=authentik-proxy@docker
      - traefik.enable=true
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN}`)
      - traefik.http.services.n8n.loadbalancer.server.port=5678
      - "traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN}`) && (PathPrefix(`/webhook-test`) || PathPrefix(`/webhook`))"

    environment:
      # N8n deployment
      N8N_HOST: n8n.${DOMAIN}
      N8N_PROTOCOL: https
      # SMTP
      N8N_SMTP_HOST: ${N8N_SMTP_HOST}
      N8N_SMTP_PORT: ${N8N_SMTP_PORT}
      N8N_SMTP_USER: ${N8N_SMTP_USER:-${EMAIL}}
      N8N_SMTP_SENDER: ${N8N_SMTP_SENDER:-${EMAIL}}
      N8N_SMTP_PASS: ${N8N_SMTP_PASS}
      N8N_PROXY_HOPS: 1
      WEBHOOK_URL: https://n8n.${DOMAIN}/
      # General
      GENERIC_TIMEZONE: ${TIMEZONE}
      TZ: ${TIMEZONE}
      # Queue mode
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      QUEUE_BULL_REDIS_HOST: n8n-mq
      QUEUE_BULL_REDIS_PORT: 6379
      # Binary Data
      N8N_DEFAULT_BINARY_DATA_MODE: filesystem
    networks:
      - ingress
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
  
  n8n-mq:
    image: redis:7.4.1
    container_name: n8n-mq
    volumes:
      - n8n-mq_data:/data
    networks:
      - ingress
    restart: unless-stopped

  n8n-workers:
    image: docker.n8n.io/n8nio/n8n:1.62.6
    command: ["worker"]
    deploy:
      replicas: 2
    environment:
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      EXECUTIONS_MODE: queue
      QUEUE_BULL_REDIS_HOST: n8n-mq
      QUEUE_BULL_REDIS_PORT: 6379
      N8N_DEFAULT_BINARY_DATA_MODE: filesystem
    networks:
      - ingress
    depends_on:
      - n8n-mq
      - n8n
    restart: unless-stopped

  litestream:
    image: litestream/litestream
    container_name: litestream
    environment:
      LITESTREAM_ACCESS_KEY_ID: ${N8N_EXTERNAL_STORAGE_S3_ACCESS_KEY}
      LITESTREAM_SECRET_ACCESS_KEY: ${N8N_EXTERNAL_STORAGE_S3_ACCESS_SECRET}
      REPLICA_URL: s3://roundtable-n8n/backup
      
    volumes:
      - n8n_data:/data
      - ./config/litestream.yml:/etc/litestream.yml
    command:
      - replicate
    restart: always
    networks:
      - ingress
